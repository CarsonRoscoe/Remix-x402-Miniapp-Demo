// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  farcasterId   Int?
  walletAddress String   @unique
  createdAt     DateTime @default(now())
  videos        Video[]
  pendingVideos PendingVideo[]
}

model DailyPrompt {
  id        String   @id @default(uuid())
  date      DateTime @unique
  prompt    String
  createdAt DateTime @default(now())
  remixes   Remix[]
}

model Video {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  videoIpfs String
  videoUrl  String?  // Original video URL from AI generation (for better previews)
  type      String   // 'daily', 'custom_remix', 'custom_video'
  createdAt DateTime @default(now())
  remix     Remix?   // Only present if this video is a remix
}

model Remix {
  id           String      @id @default(uuid())
  video        Video       @relation(fields: [videoId], references: [id])
  videoId      String      @unique
  prompt       DailyPrompt? @relation(fields: [promptId], references: [id])
  promptId     String?
  isMinted     Boolean     @default(false)
  contractAddress String?
  zoraCoinData Json?
  createdAt    DateTime    @default(now())
}

model NotificationToken {
  id        String   @id @default(uuid())
  fid       Int      @unique // Farcaster ID
  token     String
  url       String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PendingVideo {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  type          String   // 'daily-remix', 'custom-remix', 'custom-video'
  prompt        String?  // For custom prompts
  falRequestId  String   // fal.queue request ID
  status        String   @default("pending") // 'pending', 'processing', 'completed', 'failed'
  errorMessage  String?  // Error message if failed
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  completedAt   DateTime? // When the video was completed
  
  // Payment-related fields for x402 integration
  paymentPayload Json?   // Stored payment payload from x402
  paymentRequirements Json? // Stored payment requirements from x402
  paymentSettled Boolean @default(false) // Whether payment has been settled
  paymentSettledAt DateTime? // When payment was settled
}